/*

 $Id: $

*/

/*
	Table: 'phpbb_blogs'
*/
CREATE TABLE phpbb_blogs (
	blog_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
	user_id integer NOT NULL DEFAULT 0,
	user_ip varchar(40) NOT NULL DEFAULT '',
	blog_subject varchar(255) NOT NULL DEFAULT '',
	blog_text clob(16M) NOT NULL DEFAULT '',
	blog_checksum varchar(32) NOT NULL DEFAULT '',
	blog_time integer NOT NULL DEFAULT 0,
	blog_approved smallint NOT NULL DEFAULT 1,
	blog_reported smallint NOT NULL DEFAULT 0,
	enable_bbcode smallint NOT NULL DEFAULT 1,
	enable_smilies smallint NOT NULL DEFAULT 1,
	enable_magic_url smallint NOT NULL DEFAULT 1,
	bbcode_bitfield varchar(255) NOT NULL DEFAULT '',
	bbcode_uid varchar(8) NOT NULL DEFAULT '',
	blog_edit_time integer NOT NULL DEFAULT 0,
	blog_edit_reason varchar(255) NOT NULL DEFAULT '',
	blog_edit_user integer NOT NULL DEFAULT 0,
	blog_edit_count smallint NOT NULL DEFAULT 0,
	blog_edit_locked smallint NOT NULL DEFAULT 0,
	blog_deleted integer NOT NULL DEFAULT 0,
	blog_deleted_time integer NOT NULL DEFAULT 0,
	blog_read_count integer NOT NULL DEFAULT 1,
	blog_reply_count integer NOT NULL DEFAULT 0,
	blog_real_reply_count integer NOT NULL DEFAULT 0,
	perm_guest smallint NOT NULL DEFAULT 1,
	perm_registered smallint NOT NULL DEFAULT 2,
	perm_foe smallint NOT NULL DEFAULT 0,
	perm_friend smallint NOT NULL DEFAULT 2,
	rating integer NOT NULL DEFAULT 0,
	num_ratings integer NOT NULL DEFAULT 0,
	PRIMARY KEY (blog_id)
);

CREATE INDEX phpbb_blogs_user_id ON phpbb_blogs (user_id) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blogs_user_ip ON phpbb_blogs (user_ip) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blogs_blog_approved ON phpbb_blogs (blog_approved) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blogs_blog_deleted ON phpbb_blogs (blog_deleted) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blogs_perm_guest ON phpbb_blogs (perm_guest) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blogs_perm_registered ON phpbb_blogs (perm_registered) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blogs_perm_foe ON phpbb_blogs (perm_foe) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blogs_perm_friend ON phpbb_blogs (perm_friend) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blogs_rating ON phpbb_blogs (rating) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;

/*
	Table: 'phpbb_blogs_reply'
*/
CREATE TABLE phpbb_blogs_reply (
	reply_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
	blog_id integer NOT NULL DEFAULT 0,
	user_id integer NOT NULL DEFAULT 0,
	user_ip varchar(40) NOT NULL DEFAULT '',
	reply_subject varchar(255) NOT NULL DEFAULT '',
	reply_text clob(16M) NOT NULL DEFAULT '',
	reply_checksum varchar(32) NOT NULL DEFAULT '',
	reply_time integer NOT NULL DEFAULT 0,
	reply_approved smallint NOT NULL DEFAULT 1,
	reply_reported smallint NOT NULL DEFAULT 0,
	enable_bbcode smallint NOT NULL DEFAULT 1,
	enable_smilies smallint NOT NULL DEFAULT 1,
	enable_magic_url smallint NOT NULL DEFAULT 1,
	bbcode_bitfield varchar(255) NOT NULL DEFAULT '',
	bbcode_uid varchar(8) NOT NULL DEFAULT '',
	reply_edit_time integer NOT NULL DEFAULT 0,
	reply_edit_reason varchar(255) NOT NULL DEFAULT '',
	reply_edit_user integer NOT NULL DEFAULT 0,
	reply_edit_count integer NOT NULL DEFAULT 0,
	reply_edit_locked smallint NOT NULL DEFAULT 0,
	reply_deleted integer NOT NULL DEFAULT 0,
	reply_deleted_time integer NOT NULL DEFAULT 0,
	PRIMARY KEY (reply_id)
);

CREATE INDEX phpbb_blogs_reply_blog_id ON phpbb_blogs_reply (blog_id) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blogs_reply_user_id ON phpbb_blogs_reply (user_id) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blogs_reply_user_ip ON phpbb_blogs_reply (user_ip) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blogs_reply_reply_approved ON phpbb_blogs_reply (reply_approved) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blogs_reply_reply_deleted ON phpbb_blogs_reply (reply_deleted) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;

/*
	Table: 'phpbb_blogs_subscription'
*/
CREATE TABLE phpbb_blogs_subscription (
	sub_user_id integer NOT NULL DEFAULT 0,
	sub_type smallint NOT NULL DEFAULT 1,
	blog_id integer NOT NULL DEFAULT 0,
	user_id integer NOT NULL DEFAULT 0,
	PRIMARY KEY (sub_user_id, sub_type, blog_id, user_id)
);


/*
	Table: 'phpbb_blogs_plugins'
*/
CREATE TABLE phpbb_blogs_plugins (
	plugin_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
	plugin_name varchar(255) NOT NULL DEFAULT '',
	plugin_enabled smallint NOT NULL DEFAULT 0,
	plugin_version varchar(100) NOT NULL DEFAULT '',
	PRIMARY KEY (plugin_id)
);

CREATE INDEX phpbb_blogs_plugins_plugin_name ON phpbb_blogs_plugins (plugin_name) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blogs_plugins_plugin_enabled ON phpbb_blogs_plugins (plugin_enabled) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;

/*
	Table: 'phpbb_blogs_users'
*/
CREATE TABLE phpbb_blogs_users (
	user_id integer NOT NULL DEFAULT 0,
	perm_guest smallint NOT NULL DEFAULT 1,
	perm_registered smallint NOT NULL DEFAULT 2,
	perm_foe smallint NOT NULL DEFAULT 0,
	perm_friend smallint NOT NULL DEFAULT 2,
	title varchar(255) NOT NULL DEFAULT '',
	description clob(16M) NOT NULL DEFAULT '',
	description_bbcode_bitfield varchar(255) NOT NULL DEFAULT '',
	description_bbcode_uid varchar(8) NOT NULL DEFAULT '',
	instant_redirect smallint NOT NULL DEFAULT 1,
	PRIMARY KEY (user_id)
);


/*
	Table: 'phpbb_blog_search_wordlist'
*/
CREATE TABLE phpbb_blog_search_wordlist (
	word_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
	word_text varchar(255) NOT NULL DEFAULT '',
	word_common smallint NOT NULL DEFAULT 0,
	word_count integer NOT NULL DEFAULT 0,
	PRIMARY KEY (word_id)
);

CREATE UNIQUE INDEX phpbb_blog_search_wordlist_wrd_txt ON phpbb_blog_search_wordlist (word_text) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blog_search_wordlist_wrd_cnt ON phpbb_blog_search_wordlist (word_count) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;

/*
	Table: 'phpbb_blog_search_wordmatch'
*/
CREATE TABLE phpbb_blog_search_wordmatch (
	blog_id integer NOT NULL DEFAULT 0,
	reply_id integer NOT NULL DEFAULT 0,
	word_id integer NOT NULL DEFAULT 0,
	title_match smallint NOT NULL DEFAULT 0
);

CREATE UNIQUE INDEX phpbb_blog_search_wordmatch_unq_mtch ON phpbb_blog_search_wordmatch (blog_id, reply_id, word_id, title_match) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blog_search_wordmatch_word_id ON phpbb_blog_search_wordmatch (word_id) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blog_search_wordmatch_blog_id ON phpbb_blog_search_wordmatch (blog_id) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;
CREATE INDEX phpbb_blog_search_wordmatch_reply_id ON phpbb_blog_search_wordmatch (reply_id) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;

/*
	Table: 'phpbb_blogs_categories'
*/
CREATE TABLE phpbb_blogs_categories (
	category_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
	parent_id integer NOT NULL DEFAULT 0,
	left_id integer NOT NULL DEFAULT 0,
	right_id integer NOT NULL DEFAULT 0,
	category_name varchar(255) NOT NULL DEFAULT '',
	category_description clob(16M) NOT NULL DEFAULT '',
	category_description_bitfield varchar(255) NOT NULL DEFAULT '',
	category_description_uid varchar(8) NOT NULL DEFAULT '',
	category_description_options integer NOT NULL DEFAULT 7,
	rules clob(16M) NOT NULL DEFAULT '',
	rules_bitfield varchar(255) NOT NULL DEFAULT '',
	rules_uid varchar(8) NOT NULL DEFAULT '',
	rules_options integer NOT NULL DEFAULT 7,
	blog_count integer NOT NULL DEFAULT 0,
	PRIMARY KEY (category_id)
);

CREATE INDEX phpbb_blogs_categories_left_right_id ON phpbb_blogs_categories (left_id, right_id) PCTFREE 10 MINPCTUSED 10 ALLOW REVERSE SCANS  PAGE SPLIT SYMMETRIC COLLECT  SAMPLED DETAILED  STATISTICS;

/*
	Table: 'phpbb_blogs_in_categories'
*/
CREATE TABLE phpbb_blogs_in_categories (
	blog_id integer NOT NULL DEFAULT 0,
	category_id integer NOT NULL DEFAULT 0,
	PRIMARY KEY (blog_id, category_id)
);


/*
	Table: 'phpbb_blogs_ratings'
*/
CREATE TABLE phpbb_blogs_ratings (
	blog_id integer NOT NULL DEFAULT 0,
	user_id integer NOT NULL DEFAULT 0,
	rating integer NOT NULL DEFAULT 0,
	PRIMARY KEY (blog_id, user_id)
);


